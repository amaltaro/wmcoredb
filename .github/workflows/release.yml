name: Release to PyPI

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Matches x.y.z format
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pytest

    - name: Build package
      run: |
        python -m build

    - name: Verify package contents
      run: |
        # Check that SQL files are included
        tar -tzf dist/*.tar.gz | grep -E "\.sql$" | head -10
        unzip -l dist/*.whl | grep -E "\.sql$" | head -10
        
        # Check that package structure is correct
        tar -tzf dist/*.tar.gz | grep "wmcoredb/" | head -10
        unzip -l dist/*.whl | grep "wmcoredb/" | head -10

    - name: Test package installation
      run: |
        pip install dist/*.whl
        
        # Test basic functionality
        python -c "
        import wmcoredb
        print(f'Version: {wmcoredb.__version__}')
        print(f'Schemas: {wmcoredb.list_schemas()}')
        print(f'Backends: {wmcoredb.list_backends()}')
        "

    - name: Test schema access
      run: |
        pip install dist/*.whl
        
        python -c "
        import wmcoredb
        
        # Test getting SQL files
        sql_files = wmcoredb.get_sql_files('wmbs', 'oracle')
        print(f'WMBS Oracle files: {[f.name for f in sql_files]}')
        
        # Test getting schema info
        info = wmcoredb.get_schema_info()
        print(f'Available schemas: {list(info.keys())}')
        "

  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    if: success()

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Extract version from tag
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        fi

    - name: Update version
      run: |
        sed -i "s/__version__ = \".*\"/__version__ = \"${{ steps.version.outputs.version }}\"/" src/wmcoredb/version.py

    - name: Build package
      run: |
        python -m build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: |
          ## WMCore Database Schema v${{ steps.version.outputs.version }}
          
          This release contains database schema definitions for WMCore components,
          supporting both Oracle and MariaDB backends.
          
          ### Changes
          - Database schema files for WMBS, Agent, BossAir, DBS3Buffer, ResourceControl, TestDB, and Tier0
          - Support for Oracle and MariaDB backends
          - Python package for easy integration
          
          ### Installation
          ```bash
          pip install wmcoredb
          ```
          
          ### Usage
          ```python
          import wmcoredb
          
          # List available schemas
          schemas = wmcoredb.list_schemas()
          
          # Get SQL files for WMBS schema
          sql_files = wmcoredb.get_sql_files('wmbs', 'oracle')
          ```
        draft: false
        prerelease: false 