name: Test Package Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pytest setuptools

    - name: Build package
      run: |
        python -m build

    - name: Verify package contents
      run: |
        # Check that SQL files are included
        tar -tzf dist/*.tar.gz | grep -E "\.sql$" | head -10
        unzip -l dist/*.whl | grep -E "\.sql$" | head -10

        # Check that package structure is correct
        tar -tzf dist/*.tar.gz | grep "wmcoredb/" | head -10
        unzip -l dist/*.whl | grep "wmcoredb/" | head -10

    - name: Test package installation
      run: |
        pip install dist/*.whl --force-reinstall

        # Test that package can be installed (data-only package)
        echo "Package installed successfully"

    - name: Test data file access
      run: |
        pip install dist/*.whl --force-reinstall

        # Test that SQL files are accessible by checking wheel contents
        echo "Testing wheel contents..."
        unzip -l dist/*.whl | grep -E "\.sql$" | head -10

        # Test that package can be installed and files are accessible
        python -c "
        import os
        import sys
        import site

        # Find the installed data files location
        data_found = False

        # Check all site-packages directories
        for site_dir in site.getsitepackages() + [site.getusersitepackages()]:
            # Look for the data directory structure
            data_dir = os.path.join(site_dir, 'wmcoredb-0.0.0.data', 'data', 'wmcoredb')
            if os.path.exists(data_dir):
                print(f'✓ Found data directory at: {data_dir}')
                data_found = True

                # Count SQL files in the data directory
                sql_count = 0
                for root, dirs, files in os.walk(data_dir):
                    for file in files:
                        if file.endswith('.sql'):
                            sql_count += 1

                print(f'✓ Found {sql_count} SQL files in data directory')

                # Test a specific file
                test_file = os.path.join(data_dir, 'sql', 'mariadb', 'wmbs', 'create_wmbs_tables.sql')
                if os.path.exists(test_file):
                    with open(test_file, 'r') as f:
                        content = f.read()
                        print(f'✓ SQL file contains {len(content)} characters')
                    print('✓ Data file access test passed')
                    break
                else:
                    print(f'✗ Test file not found: {test_file}')
                    exit(1)

        if not data_found:
            print('✗ Data directory not found in any site-packages directory')
            exit(1)
        "