name: Test Package Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pytest

    - name: Build package
      run: |
        python -m build

    - name: Verify package contents
      run: |
        # Check that SQL files are included
        tar -tzf dist/*.tar.gz | grep -E "\.sql$" | head -10
        unzip -l dist/*.whl | grep -E "\.sql$" | head -10
        
        # Check that package structure is correct
        tar -tzf dist/*.tar.gz | grep "wmcoredb/" | head -10
        unzip -l dist/*.whl | grep "wmcoredb/" | head -10

    - name: Test package installation
      run: |
        pip install dist/*.whl --force-reinstall
        
        # Test that package can be installed (data-only package)
        echo "Package installed successfully"

    - name: Test data file access
      run: |
        pip install dist/*.whl --force-reinstall
        
        # Test that SQL files are accessible via pkg_resources
        python -c "
        import pkg_resources
        try:
            # List SQL files in the package
            sql_files = pkg_resources.resource_listdir('wmcoredb', 'sql')
            print(f'Found {len(sql_files)} SQL files in package')

            # Test accessing a specific SQL file
            file_path = pkg_resources.resource_filename('wmcoredb', 'sql/mariadb/wmbs/create_wmbs_tables.sql')
            print(f'SQL file path: {file_path}')

            # Test reading the file
            with open(file_path, 'r') as f:
                content = f.read()
                print(f'SQL file contains {len(content)} characters')

            print('✓ Data file access test passed')
        except Exception as e:
            print(f'✗ Data file access test failed: {e}')
            exit(1)
        "